{"title":"Week-7: Code-along","markdown":{"yaml":{"title":"Week-7: Code-along","author":"NM2207: Computational Media Literacy- Tang Ching Xian","date":"2 October 2023","output":{"html_document":null,"df_print":"paged"},"pdf_document":"default"},"headingText":"Palmer Penguins Dataset (Slide #6)","containsRefs":false,"markdown":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n\n\n\n```{r, eval=T,echo=TRUE}\n# Load libraries\nlibrary(tidyverse)  \n# Install package \n#install.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \n\n# See the structure of the penguins dataset\nglimpse(penguins)\n\n```\n<br>\n\n### Plot recreation (Slide #8)\n\n```{r, eval=F,echo=TRUE}\nggplot(data = penguins)\n```\n<br>\n```{r, eval=T,echo=TRUE}\n# Create a ggplot object using the penguins dataset\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm,\n                     colour = species)) +\n  \n# Add points to represent the data\n  geom_point() +\n  \n# Add labels and titles to enhance readability\n  labs(title = \"Bill depth and length\",\n       subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n       x = \"Bill depth (mm)\",\n       y = \"Bill length (mm)\",\n       colour = \"Species\",  # Label for the color legend\n       caption = \"Source: Palmer Station LTER / palmerpenguins packages\") +  # Caption with data source\n  \n# Use the Viridis color scale for the species\nscale_colour_viridis_d()\n\n# Omit the names of the first two argument when building plot with ggplot()\n#ggplot(penguins) + # Data layer\n#aes(x = bill_depth_mm,\n#y = bill_length_mm,\n#colour = species) + # Aesthetics layer\n#geom_point() + # Geometric layer\n#scale_colour_viridis_d()\n```\n<br>\n\n### Change shape\n\n```{r, eval=T,echo=TRUE}\nlibrary(palmerpenguins)\nggplot(penguins, \n       aes(x = bill_depth_mm, \n           y = bill_length_mm, \n           colour = species,\n)) +\ngeom_point() + scale_colour_viridis_d()\n\nggplot(penguins, \n       aes(x = bill_depth_mm, \n           y = bill_length_mm, \n           colour = species,   \n           shape = species)) +  \n  geom_point() + \n  scale_colour_viridis_d()\n\nggplot(penguins, \n       aes(x = bill_depth_mm, \n           y = bill_length_mm, \n           colour = species,   \n           shape = species,    \n           size = body_mass_g)) +  \n  geom_point() + \n  scale_colour_viridis_d()\n\n# Change shape of species\nggplot(penguins, \n       aes(x = bill_depth_mm, \n           y = bill_length_mm, \n           colour = species,   \n           shape = species,    # Distinguish species by shape\n           size = body_mass_g, # Size points by body mass\n           alpha = flipper_length_mm)) +  # Adjust transparency by flipper length\n  \n# Add points to represent the data\n  geom_point() + \n  \n# Use the Viridis color scale for the species\n  scale_colour_viridis_d()\n```\n<br>\n\n### Mapping verus Setting (Slide #28)\n\n```{r, eval=T,echo=TRUE}\n# Mapping (using aes())\nggplot(penguins,\naes(x = bill_depth_mm,\n    y = bill_length_mm,\n    size = body_mass_g,\n    alpha = flipper_length_mm)) +\ngeom_point()\n##note: values of x, y, size, and alpha are dynamically determined based on the variables specified in aes(). This is useful when creating a plot where these aesthetics vary across different levels of your data.\n\n#Setting (directly within geom or ggplot() call)\nggplot(penguins,\naes(x = bill_depth_mm,\n    y = bill_length_mm)) +\ngeom_point(size = 2, alpha = 0.5)\n##note: The aesthetics (x and y) are mapped globally using aes() at the beginning of the ggplot call, but size and alpha are constant for all points.\n\n```\n<br>\n\n```{r, eval=T,echo=TRUE}\n\n# Create a ggplot object using the penguins dataset\nggplot(penguins,\naes(x = bill_depth_mm,\n    y = bill_length_mm)) +\ngeom_point() +\n# Create facets (small multiples) based on species and island\nfacet_grid(species ~ island)\n\n##note: faceting useful for exploring conditional relationship and large data, generate smaller plots that display different subsets of the data\nggplot(penguins) +\naes(x = bill_depth_mm,\n    y = bill_length_mm) +\ngeom_point() +\n# Create facets (small multiples) based on species and sex\nfacet_grid(species ~ sex)\n\nggplot(penguins) +\naes(x = bill_depth_mm,\n    y = bill_length_mm) +\ngeom_point() +\n# Create facets (small multiples) based on sex and species, order matters\nfacet_grid(sex ~ species)\n\n\nggplot(penguins) +\naes(x = bill_depth_mm,\n    y = bill_length_mm) +\ngeom_point() +\n# Create facets (small multiples) based on species only.\nfacet_grid(.~ species)\n\n#verus \nggplot(penguins) +\naes(x = bill_depth_mm,\n    y = bill_length_mm) +\ngeom_point() +\n# Create facets (small multiples) based on species only\nfacet_wrap(~ species)\n\n##note: facet_grid can create a grid with both rows and columns, while facet_wrap typically arranges them in a one-dimensional ribbon.\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) +\n  geom_point() +\n  \n# Facet the plot by species, arranging them in 2 columns\nfacet_wrap(~ species, ncol = 2)\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, color = species)) +\n  geom_point() +\n  facet_grid(species ~ sex) +\n  scale_color_viridis_d() \n  \nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, color = species)) +\n  geom_point() +\n  facet_grid(species ~ sex) +\n  scale_color_viridis_d() +\n  # Remove the color legend\n  guides(color = \"none\")\n```\n<br>\n\n### Visualise numeric varibale  (Slide #40)\n\n```{r, eval=T,echo=TRUE}\nlibrary(openintro)\nglimpse(loans_full_schema)\n# Select specific columns from the loans_full_schema dataset\nloans <- loans_full_schema %>%\n  select(\n    loan_amount,\n    interest_rate,\n    term,\n    grade,\n    state,\n    annual_income,\n    homeownership,\n    debt_to_income\n  )\n\n# Display a summary of the loans dataset\nglimpse(loans)\n\n```\n<br>\n\n### Visualise using Histogram  (Slide #46)\n```{r, eval=T,echo=TRUE}\nggplot(loans) + aes(x = loan_amount) +\ngeom_histogram()\n\n# binwidth = 1000\nggplot(loans, aes(x = loan_amount)) +\ngeom_histogram(binwidth = 1000)\n\n# binwidth = 5000\nggplot(loans, aes(x = loan_amount)) +\ngeom_histogram(binwidth = 5000)\n\n# binwidth = 20000\nggplot(loans, aes(x = loan_amount)) +\ngeom_histogram(binwidth = 20000)\n```\n<br>\n\n## Customise Historgram (Slide #50)\n\n```{r, eval=T,echo=TRUE}\nggplot(loans, aes(x = loan_amount)) + geom_histogram(binwidth = 5000) +\nlabs(x = \"Loan amount ($)\", y = \"Frequency\", title = \"Amounts of Lending Club loans\" )\n\nggplot(loans, aes(x = loan_amount, fill = homeownership)) +\ngeom_histogram(binwidth = 5000, alpha = 0.5) +\nlabs(x = \"Loan amount ($)\",y = \"Frequency\",title = \"Amounts of Lending Club loans\")\n\n# Categorical variable \n# Create a ggplot object using the loans dataset\nggplot(loans, aes(x = loan_amount, fill = homeownership)) +\n\n# Add a histogram to represent the distribution of loan amounts\ngeom_histogram(binwidth = 5000) +\n\n# Customize axis labels, title, and facet the plot by homeownership\nlabs(\n  x = \"Loan amount ($)\",\n  y = \"Frequency\",\n  title = \"Amounts of Lending Club loans\"\n) +\n\n# Facet the plot by homeownership, arranging in 3 rows\nfacet_wrap(~ homeownership, nrow = 3)\n\n```\n<br>\n\n```{r, eval=T,echo=TRUE}\nggplot(loans, aes(x = loan_amount)) +\ngeom_density()\n\nggplot(loans, aes(x = loan_amount)) +\ngeom_density(adjust = 0.5)\n\nggplot(loans, aes(x = loan_amount)) +\ngeom_density(adjust = 1) # default bandwidth\n\nggplot(loans, aes(x = loan_amount)) +\ngeom_density(adjust = 2) +\nlabs( x = \"Loan amount ($)\", y = \"Density\", title = \"Amounts of Lending Club loans\" )\n\n# Density Plot and adjustment to bandwidth \nggplot(loans, aes(x = loan_amount, fill = homeownership)) +\ngeom_density(adjust = 2, alpha = 0.5) + # Default = 1 bandwidth, adjust controls the smoothness, more smooth when adjust increase\nlabs( x = \"Loan amount ($)\", y = \"Density\", title = \"Amounts of Lending Club loans\", fill = \"Homewownership\")\n```\n<br>\n\n\n```{r, eval=T,echo=TRUE}\n# Box plot and outliers\nggplot(loans, aes(x = interest_rate)) +\ngeom_boxplot()\n\nggplot(loans, aes(x = annual_income)) +\ngeom_boxplot()\n\nggplot(loans, aes(x = interest_rate)) +geom_boxplot() +labs(x = \"Interest rate (%)\",y = NULL,\ntitle = \"Interest rates of Lending Club loans\") +\ntheme( axis.ticks.y = element_blank(), axis.text.y = element_blank() )\n\nggplot(loans, aes(x = interest_rate,\ny = grade)) +\ngeom_boxplot() +\nlabs(x = \"Interest rate (%)\",y = \"Grade\",title = \"Interest rates of Lending Club loans\",subtitle = \"by grade of loan\")\n```\n<br>\n\n```{r, eval=T,echo=TRUE}\n# Scatterplot\nggplot(loans, aes(x = debt_to_income, y = interest_rate)) +\ngeom_point()\n\n# Hexplot\n#install.packages(\"hexbin\")\n# Load the hexbin package\nlibrary(hexbin)\nggplot(loans, aes(x = debt_to_income, y = interest_rate)) +\ngeom_hex()\n# Another hex plot\nggplot(loans %>% filter(debt_to_income < 100),\n       aes(x = debt_to_income, y = interest_rate)) +\ngeom_hex()\n\n```\n<br>\n\n### Visualise categoric varibale  (Slide #67)\n\n```{r, eval=T,echo=TRUE}\nggplot(loans, aes(x = homeownership)) +\ngeom_bar()\n\n# Bar plot\n# Segmented\nggplot(loans, aes(x = homeownership,\n        fill = grade)) +\ngeom_bar()\n\n# Display segemnetd bar plot and evaluate the percentage of which grade\nggplot(loans, aes(x = homeownership, fill = grade)) +\ngeom_bar(position = \"fill\")\n\n#Customise bar plots \nggplot(loans, aes(y = homeownership, fill = grade)) + geom_bar(position = \"fill\") +\nlabs( x = \"Proportion\", y = \"Homeownership\", fill = \"Grade\", title = \"Grades of Lending Club loans\", subtitle = \"and homeownership of lendee\")\n\n```\n<br>\n\n```{r, eval=T,echo=TRUE}\n\n# Visulaising variables of varied types\n# Violin Plots\nggplot(loans, aes(x = homeownership, y = loan_amount)) +\ngeom_violin()\n\n# Ridge plots\n#install.packages(\"ggridges\")\nlibrary(ggridges)\nggplot(loans, aes(x = loan_amount, y = grade, fill = grade, color = grade)) +\ngeom_density_ridges(alpha = 0.5)\n\n\n\n```\n<br>\n","srcMarkdownNoYaml":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n\n\n### Palmer Penguins Dataset (Slide #6)\n\n```{r, eval=T,echo=TRUE}\n# Load libraries\nlibrary(tidyverse)  \n# Install package \n#install.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \n\n# See the structure of the penguins dataset\nglimpse(penguins)\n\n```\n<br>\n\n### Plot recreation (Slide #8)\n\n```{r, eval=F,echo=TRUE}\nggplot(data = penguins)\n```\n<br>\n```{r, eval=T,echo=TRUE}\n# Create a ggplot object using the penguins dataset\nggplot(data = penguins,\n       mapping = aes(x = bill_depth_mm,\n                     y = bill_length_mm,\n                     colour = species)) +\n  \n# Add points to represent the data\n  geom_point() +\n  \n# Add labels and titles to enhance readability\n  labs(title = \"Bill depth and length\",\n       subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n       x = \"Bill depth (mm)\",\n       y = \"Bill length (mm)\",\n       colour = \"Species\",  # Label for the color legend\n       caption = \"Source: Palmer Station LTER / palmerpenguins packages\") +  # Caption with data source\n  \n# Use the Viridis color scale for the species\nscale_colour_viridis_d()\n\n# Omit the names of the first two argument when building plot with ggplot()\n#ggplot(penguins) + # Data layer\n#aes(x = bill_depth_mm,\n#y = bill_length_mm,\n#colour = species) + # Aesthetics layer\n#geom_point() + # Geometric layer\n#scale_colour_viridis_d()\n```\n<br>\n\n### Change shape\n\n```{r, eval=T,echo=TRUE}\nlibrary(palmerpenguins)\nggplot(penguins, \n       aes(x = bill_depth_mm, \n           y = bill_length_mm, \n           colour = species,\n)) +\ngeom_point() + scale_colour_viridis_d()\n\nggplot(penguins, \n       aes(x = bill_depth_mm, \n           y = bill_length_mm, \n           colour = species,   \n           shape = species)) +  \n  geom_point() + \n  scale_colour_viridis_d()\n\nggplot(penguins, \n       aes(x = bill_depth_mm, \n           y = bill_length_mm, \n           colour = species,   \n           shape = species,    \n           size = body_mass_g)) +  \n  geom_point() + \n  scale_colour_viridis_d()\n\n# Change shape of species\nggplot(penguins, \n       aes(x = bill_depth_mm, \n           y = bill_length_mm, \n           colour = species,   \n           shape = species,    # Distinguish species by shape\n           size = body_mass_g, # Size points by body mass\n           alpha = flipper_length_mm)) +  # Adjust transparency by flipper length\n  \n# Add points to represent the data\n  geom_point() + \n  \n# Use the Viridis color scale for the species\n  scale_colour_viridis_d()\n```\n<br>\n\n### Mapping verus Setting (Slide #28)\n\n```{r, eval=T,echo=TRUE}\n# Mapping (using aes())\nggplot(penguins,\naes(x = bill_depth_mm,\n    y = bill_length_mm,\n    size = body_mass_g,\n    alpha = flipper_length_mm)) +\ngeom_point()\n##note: values of x, y, size, and alpha are dynamically determined based on the variables specified in aes(). This is useful when creating a plot where these aesthetics vary across different levels of your data.\n\n#Setting (directly within geom or ggplot() call)\nggplot(penguins,\naes(x = bill_depth_mm,\n    y = bill_length_mm)) +\ngeom_point(size = 2, alpha = 0.5)\n##note: The aesthetics (x and y) are mapped globally using aes() at the beginning of the ggplot call, but size and alpha are constant for all points.\n\n```\n<br>\n\n```{r, eval=T,echo=TRUE}\n\n# Create a ggplot object using the penguins dataset\nggplot(penguins,\naes(x = bill_depth_mm,\n    y = bill_length_mm)) +\ngeom_point() +\n# Create facets (small multiples) based on species and island\nfacet_grid(species ~ island)\n\n##note: faceting useful for exploring conditional relationship and large data, generate smaller plots that display different subsets of the data\nggplot(penguins) +\naes(x = bill_depth_mm,\n    y = bill_length_mm) +\ngeom_point() +\n# Create facets (small multiples) based on species and sex\nfacet_grid(species ~ sex)\n\nggplot(penguins) +\naes(x = bill_depth_mm,\n    y = bill_length_mm) +\ngeom_point() +\n# Create facets (small multiples) based on sex and species, order matters\nfacet_grid(sex ~ species)\n\n\nggplot(penguins) +\naes(x = bill_depth_mm,\n    y = bill_length_mm) +\ngeom_point() +\n# Create facets (small multiples) based on species only.\nfacet_grid(.~ species)\n\n#verus \nggplot(penguins) +\naes(x = bill_depth_mm,\n    y = bill_length_mm) +\ngeom_point() +\n# Create facets (small multiples) based on species only\nfacet_wrap(~ species)\n\n##note: facet_grid can create a grid with both rows and columns, while facet_wrap typically arranges them in a one-dimensional ribbon.\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) +\n  geom_point() +\n  \n# Facet the plot by species, arranging them in 2 columns\nfacet_wrap(~ species, ncol = 2)\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, color = species)) +\n  geom_point() +\n  facet_grid(species ~ sex) +\n  scale_color_viridis_d() \n  \nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, color = species)) +\n  geom_point() +\n  facet_grid(species ~ sex) +\n  scale_color_viridis_d() +\n  # Remove the color legend\n  guides(color = \"none\")\n```\n<br>\n\n### Visualise numeric varibale  (Slide #40)\n\n```{r, eval=T,echo=TRUE}\nlibrary(openintro)\nglimpse(loans_full_schema)\n# Select specific columns from the loans_full_schema dataset\nloans <- loans_full_schema %>%\n  select(\n    loan_amount,\n    interest_rate,\n    term,\n    grade,\n    state,\n    annual_income,\n    homeownership,\n    debt_to_income\n  )\n\n# Display a summary of the loans dataset\nglimpse(loans)\n\n```\n<br>\n\n### Visualise using Histogram  (Slide #46)\n```{r, eval=T,echo=TRUE}\nggplot(loans) + aes(x = loan_amount) +\ngeom_histogram()\n\n# binwidth = 1000\nggplot(loans, aes(x = loan_amount)) +\ngeom_histogram(binwidth = 1000)\n\n# binwidth = 5000\nggplot(loans, aes(x = loan_amount)) +\ngeom_histogram(binwidth = 5000)\n\n# binwidth = 20000\nggplot(loans, aes(x = loan_amount)) +\ngeom_histogram(binwidth = 20000)\n```\n<br>\n\n## Customise Historgram (Slide #50)\n\n```{r, eval=T,echo=TRUE}\nggplot(loans, aes(x = loan_amount)) + geom_histogram(binwidth = 5000) +\nlabs(x = \"Loan amount ($)\", y = \"Frequency\", title = \"Amounts of Lending Club loans\" )\n\nggplot(loans, aes(x = loan_amount, fill = homeownership)) +\ngeom_histogram(binwidth = 5000, alpha = 0.5) +\nlabs(x = \"Loan amount ($)\",y = \"Frequency\",title = \"Amounts of Lending Club loans\")\n\n# Categorical variable \n# Create a ggplot object using the loans dataset\nggplot(loans, aes(x = loan_amount, fill = homeownership)) +\n\n# Add a histogram to represent the distribution of loan amounts\ngeom_histogram(binwidth = 5000) +\n\n# Customize axis labels, title, and facet the plot by homeownership\nlabs(\n  x = \"Loan amount ($)\",\n  y = \"Frequency\",\n  title = \"Amounts of Lending Club loans\"\n) +\n\n# Facet the plot by homeownership, arranging in 3 rows\nfacet_wrap(~ homeownership, nrow = 3)\n\n```\n<br>\n\n```{r, eval=T,echo=TRUE}\nggplot(loans, aes(x = loan_amount)) +\ngeom_density()\n\nggplot(loans, aes(x = loan_amount)) +\ngeom_density(adjust = 0.5)\n\nggplot(loans, aes(x = loan_amount)) +\ngeom_density(adjust = 1) # default bandwidth\n\nggplot(loans, aes(x = loan_amount)) +\ngeom_density(adjust = 2) +\nlabs( x = \"Loan amount ($)\", y = \"Density\", title = \"Amounts of Lending Club loans\" )\n\n# Density Plot and adjustment to bandwidth \nggplot(loans, aes(x = loan_amount, fill = homeownership)) +\ngeom_density(adjust = 2, alpha = 0.5) + # Default = 1 bandwidth, adjust controls the smoothness, more smooth when adjust increase\nlabs( x = \"Loan amount ($)\", y = \"Density\", title = \"Amounts of Lending Club loans\", fill = \"Homewownership\")\n```\n<br>\n\n\n```{r, eval=T,echo=TRUE}\n# Box plot and outliers\nggplot(loans, aes(x = interest_rate)) +\ngeom_boxplot()\n\nggplot(loans, aes(x = annual_income)) +\ngeom_boxplot()\n\nggplot(loans, aes(x = interest_rate)) +geom_boxplot() +labs(x = \"Interest rate (%)\",y = NULL,\ntitle = \"Interest rates of Lending Club loans\") +\ntheme( axis.ticks.y = element_blank(), axis.text.y = element_blank() )\n\nggplot(loans, aes(x = interest_rate,\ny = grade)) +\ngeom_boxplot() +\nlabs(x = \"Interest rate (%)\",y = \"Grade\",title = \"Interest rates of Lending Club loans\",subtitle = \"by grade of loan\")\n```\n<br>\n\n```{r, eval=T,echo=TRUE}\n# Scatterplot\nggplot(loans, aes(x = debt_to_income, y = interest_rate)) +\ngeom_point()\n\n# Hexplot\n#install.packages(\"hexbin\")\n# Load the hexbin package\nlibrary(hexbin)\nggplot(loans, aes(x = debt_to_income, y = interest_rate)) +\ngeom_hex()\n# Another hex plot\nggplot(loans %>% filter(debt_to_income < 100),\n       aes(x = debt_to_income, y = interest_rate)) +\ngeom_hex()\n\n```\n<br>\n\n### Visualise categoric varibale  (Slide #67)\n\n```{r, eval=T,echo=TRUE}\nggplot(loans, aes(x = homeownership)) +\ngeom_bar()\n\n# Bar plot\n# Segmented\nggplot(loans, aes(x = homeownership,\n        fill = grade)) +\ngeom_bar()\n\n# Display segemnetd bar plot and evaluate the percentage of which grade\nggplot(loans, aes(x = homeownership, fill = grade)) +\ngeom_bar(position = \"fill\")\n\n#Customise bar plots \nggplot(loans, aes(y = homeownership, fill = grade)) + geom_bar(position = \"fill\") +\nlabs( x = \"Proportion\", y = \"Homeownership\", fill = \"Grade\", title = \"Grades of Lending Club loans\", subtitle = \"and homeownership of lendee\")\n\n```\n<br>\n\n```{r, eval=T,echo=TRUE}\n\n# Visulaising variables of varied types\n# Violin Plots\nggplot(loans, aes(x = homeownership, y = loan_amount)) +\ngeom_violin()\n\n# Ridge plots\n#install.packages(\"ggridges\")\nlibrary(ggridges)\nggplot(loans, aes(x = loan_amount, y = grade, fill = grade, color = grade)) +\ngeom_density_ridges(alpha = 0.5)\n\n\n\n```\n<br>\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":{"html_document":null,"df_print":"paged"},"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"output-file":"week 7 code along_ching xian.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.353","editor":"visual","theme":"Morph","title":"Week-7: Code-along","author":"NM2207: Computational Media Literacy- Tang Ching Xian","date":"2 October 2023","pdf_document":"default"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}