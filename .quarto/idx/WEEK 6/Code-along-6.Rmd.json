{"title":"Week-6: Code-along","markdown":{"yaml":{"title":"Week-6: Code-along","author":"NM2207: Computational Media Literacy- Tang Ching Xian","date":"13 September 2023","output":{"html_document":null,"df_print":"paged"},"pdf_document":"default"},"headingText":"II. Code to edit and execute using the Code-along-6.Rmd file","containsRefs":false,"markdown":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n<br>\n\n## A. `for` loop\n<br>\n\n### 1. Simple `for` loop (Slide #6)\n\n```{r, eval=T,echo=TRUE}\nfor (x in c (3,6,9)) {\n  print(x)\n}\n\n#action occurs between the curly brackets (print etc.)\n\n```\n<br>\n\n### 2. `for` loops structure (Slide #7)\n\n```{r, eval=T,echo=TRUE}\n# Left-hand side code: for loop for passing values\nfor (x in 1:8) {print(x)}\n\n# for (value in list_of_values) {do soemthing (based on value)}\n```\n<br>\n```{r, eval=T,echo=TRUE}\n# Right-hand side code: for loop for passing indices\nfor (x in 1:8) \n{y <- seq(from=100, to = 200, by=5) \n  print(y[x])}\n\n#for (index in list_of_indices){give y variable with specific sequnece and do something eg print(based on index)}\n```\n<br>\n\n### 3. Example: find sample means (Slide #9)\n\n```{r, eval=T,echo=TRUE}\n# Find means of increasingly large samples\n#Repeating code in order to find mean \n#mean1 <- mean(rnorm(5))\n#mean2 <- mean(rnorm(10))\n#mean3 <- mean(rnorm(15))\n#mean4 <- mean(rnorm(20))\n#mean5 <- mean(rnorm(25000))\n#print(c(mean1, mean2, mean3, mean4, mean5))\n\n#determine what to loop over\nsample_sizes <- c(5,10,15,20,25000)\n#pre-allocate space to store output\nsample_means <- double(length(sample_sizes))\nfor (i in seq_along(sample_sizes)){\n  sample_means[i] <- mean(rnorm(sample_sizes[i]))\n}\n\nsample_means\n#seq_along(x) is synonymous to 1:length(x)\n```\n<br>\n\n### 4. Alternate ways to pre-allocate space (Slide #12)\n\n```{r, eval=T,echo=TRUE}\n# Example 3 for data_type=double\nsample_means <- rep(0, length(sample_sizes))\n```\n<br>\n\n```{r, eval=T,echo=TRUE}\n# Initialisation of data_list\nsample_sizes <- c(5, 10, 15, 20, 25000)\n# Generate indices using seq_along\n##seq_along(sample_sizes)\n\n# Initialize a vector of zeros of the same size as sample_sizes\nsample_means <- rep(0, length(sample_sizes))\n\n# # Another way to initialize a vector of zeros is here below\n# sample_means <- numeric(length(sample_sizes))\n# Loop over each sample size and calculate the mean\nfor (i in seq_along(sample_sizes)) {\n  # Generate a random sample from a normal distribution and calculate its mean\n  sample_means[i] <- mean(rnorm(sample_sizes[i]))\n}\n\n# Print the calculated sample means\nprint(sample_means)\n```\n<br>\n\n### 5. Review: Vectorized operations (Slide #18)\n\n```{r, eval=T,echo=TRUE}\n# Example: bad idea!\n# Vector with numbers from 7 to 11\na <- 7:11\n# Vector with numbers from 8 to 12\nb <- 8:12\n# Vector of all zeros of length 5\nout <- rep(0L, 5)\n# Loop along the length of vector a\nfor (i in seq_along(a)) {\n# Each entry of out is the sum of the corres\nout[i] <- a[i] + b[i]\n}\nout\n```\n<br>\n\n```{r, eval=T,echo=TRUE}\n# Taking advantage of vectorization\n# Vector with numbers from 7 to 11\na <- 7:11\n# Vector with numbers from 8 to 12\nb <- 8:12\nout <- a + b\nout\n```\n<br>\n\n## B. Functionals\n\n### 6. `for` loops vs Functionals (Slides #23 and #24)\n\n```{r, eval=T,echo=TRUE}\n# Initialise a vector with the size of 5 different samples\nsample_sizes <- c(5, 10, 15, 20, 25000)\n# Create a functional- function inside a function\nsample_summary <- function(sample_sizes, fun) {\n# Initialise a vector of the same size as sample_sizes\nout <- vector(\"double\", length(sample_sizes))\n# Run the for loop for as long as the length of sample_sizes\nfor (i in seq_along(sample_sizes)) {\n# Perform operations indicated fun\nout[i] <- fun(rnorm(sample_sizes[i]))\n}\nreturn(out)\n}\n```\n<br>\n\n```{r, eval=T,echo=TRUE}\n# Slide 24\n#Compute mean\nsample_summary(sample_sizes,mean)\n# Compute median\nsample_summary(sample_sizes,median)\n# Compute sd\nsample_summary(sample_sizes,sd)\n```\n<br>\n\n## C. `while` loop\n\n### 7. `while` loop (Slides #27)\n\n```{r, eval=T,echo=TRUE}\n# Left-hand side code: for loop\nfor(i in 1:5){\nprint(i)\n}\n```\n<br>\n\n```{r, eval=T,echo=TRUE}\n# Right-hand side code: while loop\ni <- 1\nwhile (i <= 5) {\nprint(i)\ni <- i + 1\n}\n```\n<br>\n\n\n","srcMarkdownNoYaml":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n# II. Code to edit and execute using the Code-along-6.Rmd file \n<br>\n\n## A. `for` loop\n<br>\n\n### 1. Simple `for` loop (Slide #6)\n\n```{r, eval=T,echo=TRUE}\nfor (x in c (3,6,9)) {\n  print(x)\n}\n\n#action occurs between the curly brackets (print etc.)\n\n```\n<br>\n\n### 2. `for` loops structure (Slide #7)\n\n```{r, eval=T,echo=TRUE}\n# Left-hand side code: for loop for passing values\nfor (x in 1:8) {print(x)}\n\n# for (value in list_of_values) {do soemthing (based on value)}\n```\n<br>\n```{r, eval=T,echo=TRUE}\n# Right-hand side code: for loop for passing indices\nfor (x in 1:8) \n{y <- seq(from=100, to = 200, by=5) \n  print(y[x])}\n\n#for (index in list_of_indices){give y variable with specific sequnece and do something eg print(based on index)}\n```\n<br>\n\n### 3. Example: find sample means (Slide #9)\n\n```{r, eval=T,echo=TRUE}\n# Find means of increasingly large samples\n#Repeating code in order to find mean \n#mean1 <- mean(rnorm(5))\n#mean2 <- mean(rnorm(10))\n#mean3 <- mean(rnorm(15))\n#mean4 <- mean(rnorm(20))\n#mean5 <- mean(rnorm(25000))\n#print(c(mean1, mean2, mean3, mean4, mean5))\n\n#determine what to loop over\nsample_sizes <- c(5,10,15,20,25000)\n#pre-allocate space to store output\nsample_means <- double(length(sample_sizes))\nfor (i in seq_along(sample_sizes)){\n  sample_means[i] <- mean(rnorm(sample_sizes[i]))\n}\n\nsample_means\n#seq_along(x) is synonymous to 1:length(x)\n```\n<br>\n\n### 4. Alternate ways to pre-allocate space (Slide #12)\n\n```{r, eval=T,echo=TRUE}\n# Example 3 for data_type=double\nsample_means <- rep(0, length(sample_sizes))\n```\n<br>\n\n```{r, eval=T,echo=TRUE}\n# Initialisation of data_list\nsample_sizes <- c(5, 10, 15, 20, 25000)\n# Generate indices using seq_along\n##seq_along(sample_sizes)\n\n# Initialize a vector of zeros of the same size as sample_sizes\nsample_means <- rep(0, length(sample_sizes))\n\n# # Another way to initialize a vector of zeros is here below\n# sample_means <- numeric(length(sample_sizes))\n# Loop over each sample size and calculate the mean\nfor (i in seq_along(sample_sizes)) {\n  # Generate a random sample from a normal distribution and calculate its mean\n  sample_means[i] <- mean(rnorm(sample_sizes[i]))\n}\n\n# Print the calculated sample means\nprint(sample_means)\n```\n<br>\n\n### 5. Review: Vectorized operations (Slide #18)\n\n```{r, eval=T,echo=TRUE}\n# Example: bad idea!\n# Vector with numbers from 7 to 11\na <- 7:11\n# Vector with numbers from 8 to 12\nb <- 8:12\n# Vector of all zeros of length 5\nout <- rep(0L, 5)\n# Loop along the length of vector a\nfor (i in seq_along(a)) {\n# Each entry of out is the sum of the corres\nout[i] <- a[i] + b[i]\n}\nout\n```\n<br>\n\n```{r, eval=T,echo=TRUE}\n# Taking advantage of vectorization\n# Vector with numbers from 7 to 11\na <- 7:11\n# Vector with numbers from 8 to 12\nb <- 8:12\nout <- a + b\nout\n```\n<br>\n\n## B. Functionals\n\n### 6. `for` loops vs Functionals (Slides #23 and #24)\n\n```{r, eval=T,echo=TRUE}\n# Initialise a vector with the size of 5 different samples\nsample_sizes <- c(5, 10, 15, 20, 25000)\n# Create a functional- function inside a function\nsample_summary <- function(sample_sizes, fun) {\n# Initialise a vector of the same size as sample_sizes\nout <- vector(\"double\", length(sample_sizes))\n# Run the for loop for as long as the length of sample_sizes\nfor (i in seq_along(sample_sizes)) {\n# Perform operations indicated fun\nout[i] <- fun(rnorm(sample_sizes[i]))\n}\nreturn(out)\n}\n```\n<br>\n\n```{r, eval=T,echo=TRUE}\n# Slide 24\n#Compute mean\nsample_summary(sample_sizes,mean)\n# Compute median\nsample_summary(sample_sizes,median)\n# Compute sd\nsample_summary(sample_sizes,sd)\n```\n<br>\n\n## C. `while` loop\n\n### 7. `while` loop (Slides #27)\n\n```{r, eval=T,echo=TRUE}\n# Left-hand side code: for loop\nfor(i in 1:5){\nprint(i)\n}\n```\n<br>\n\n```{r, eval=T,echo=TRUE}\n# Right-hand side code: while loop\ni <- 1\nwhile (i <= 5) {\nprint(i)\ni <- i + 1\n}\n```\n<br>\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":{"html_document":null,"df_print":"paged"},"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"output-file":"Code-along-6.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.353","editor":"visual","theme":"Morph","title":"Week-6: Code-along","author":"NM2207: Computational Media Literacy- Tang Ching Xian","date":"13 September 2023","pdf_document":"default"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}