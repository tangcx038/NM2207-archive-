{"title":"Challenge-6","markdown":{"yaml":{"title":"Challenge-6","author":"Tang Ching Xian","date":"18 September 2023","output":"html_document"},"headingText":"Questions","containsRefs":false,"markdown":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n<br>\n\n#### Question-1: Countdown Blastoff (While Loop)\n\nCreate a program that simulates a rocket launch countdown using a while loop. Start from 10 and countdown to \"Blastoff!\" with a one-second delay between each countdown number. Print a message when the rocket launches.\n\n**Hint:** You may want to use `cat` command to print the countdown and `Sys.sleep` for incorporating the delay\n\n**Solutions:**\n\n```{r, eval=T,echo=TRUE}\n  count <- 10\n  while (count > 0) {\n    print(count)\n    count <- count - 1\n    Sys.sleep(1)\n  }\n  cat(\"Blastoff!\\n\")\n\ncount <- 10\nwhile (count > 0) {\n  if (count == 1) {\n    cat(count, \"BLASTOFF!\\n\")\n  } else {\n    cat(count, \"...\")\n  }\n  Sys.sleep(1)\n  count <- count - 1\n}\n\n#involving function\n#countdown <- function() {\n#  count <- 10\n# while (count > 0) {\n#   cat(count,\"... \")\n#   Sys.sleep(1)  \n# count <- count - 1\n# }\n# cat(\"BLASTOFF!\\n\")\n#}\n\n#countdown()\n```\n\n<br>\n\n#### Question-2: Word Reverser (for Loop)\n\nDevelop a program that takes a user-entered word and uses a while loop to print the word's characters in reverse order. For example, if the user enters \"hello,\" the program should print \"olleh.\"\n\n**Hint:** You may want to use `substr` command to access each character of the input word, and `paste` command to join the reversed letters one at a time\n\n**Solutions:** \n\n```{r, eval=T,echo=TRUE}\n# Prompt the user for input\nword <- readline(prompt = \"Enter a word: CHING\")\n\n# Initialize an empty string for the reversed word\nreversed_word <- \"\"\n\n# Get the length of the input word\nword_length <- nchar(word)\n\n# Iterate over the characters in reverse order and append them to the reversed word\nfor (i in word_length:1) {\n  char <- substr(word, i, i)  \n  reversed_word <- paste(reversed_word, char, sep = \"\")  \n}\n\n# Print the reversed word\ncat(\"Reversed word:GNIHC\", reversed_word, \"\\n\")\n\n\n#library(tidyverse)\n\n#input_str <- \"tired\"\n#input_str <- unlist(str_split(input_str, \"\"))\n\n#new_str <- character(length(unlist(input_str)))\n\n#for (x in seq_along(unlist(input_str))) {\n  #new_str[x] <- input_str[length(input_str)-x+1]\n#}\n#paste(unlist(new_str),sep = \"\", collapse = \"\") #paste0(…, collapse) is equivalent to paste(…, sep = \"\", collapse)\n\n```\n\n<br>\n","srcMarkdownNoYaml":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n## Questions\n<br>\n\n#### Question-1: Countdown Blastoff (While Loop)\n\nCreate a program that simulates a rocket launch countdown using a while loop. Start from 10 and countdown to \"Blastoff!\" with a one-second delay between each countdown number. Print a message when the rocket launches.\n\n**Hint:** You may want to use `cat` command to print the countdown and `Sys.sleep` for incorporating the delay\n\n**Solutions:**\n\n```{r, eval=T,echo=TRUE}\n  count <- 10\n  while (count > 0) {\n    print(count)\n    count <- count - 1\n    Sys.sleep(1)\n  }\n  cat(\"Blastoff!\\n\")\n\ncount <- 10\nwhile (count > 0) {\n  if (count == 1) {\n    cat(count, \"BLASTOFF!\\n\")\n  } else {\n    cat(count, \"...\")\n  }\n  Sys.sleep(1)\n  count <- count - 1\n}\n\n#involving function\n#countdown <- function() {\n#  count <- 10\n# while (count > 0) {\n#   cat(count,\"... \")\n#   Sys.sleep(1)  \n# count <- count - 1\n# }\n# cat(\"BLASTOFF!\\n\")\n#}\n\n#countdown()\n```\n\n<br>\n\n#### Question-2: Word Reverser (for Loop)\n\nDevelop a program that takes a user-entered word and uses a while loop to print the word's characters in reverse order. For example, if the user enters \"hello,\" the program should print \"olleh.\"\n\n**Hint:** You may want to use `substr` command to access each character of the input word, and `paste` command to join the reversed letters one at a time\n\n**Solutions:** \n\n```{r, eval=T,echo=TRUE}\n# Prompt the user for input\nword <- readline(prompt = \"Enter a word: CHING\")\n\n# Initialize an empty string for the reversed word\nreversed_word <- \"\"\n\n# Get the length of the input word\nword_length <- nchar(word)\n\n# Iterate over the characters in reverse order and append them to the reversed word\nfor (i in word_length:1) {\n  char <- substr(word, i, i)  \n  reversed_word <- paste(reversed_word, char, sep = \"\")  \n}\n\n# Print the reversed word\ncat(\"Reversed word:GNIHC\", reversed_word, \"\\n\")\n\n\n#library(tidyverse)\n\n#input_str <- \"tired\"\n#input_str <- unlist(str_split(input_str, \"\"))\n\n#new_str <- character(length(unlist(input_str)))\n\n#for (x in seq_along(unlist(input_str))) {\n  #new_str[x] <- input_str[length(input_str)-x+1]\n#}\n#paste(unlist(new_str),sep = \"\", collapse = \"\") #paste0(…, collapse) is equivalent to paste(…, sep = \"\", collapse)\n\n```\n\n<br>\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":"html_document","warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"output-file":"Challenge-6.1.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.353","editor":"visual","theme":"Morph","title":"Challenge-6","author":"Tang Ching Xian","date":"18 September 2023"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}