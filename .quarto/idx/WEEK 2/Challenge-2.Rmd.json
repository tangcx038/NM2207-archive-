{"title":"Challenge-2","markdown":{"yaml":{"title":"Challenge-2","author":"Tang Ching Xian","date":"2023-08-21","output":"html_document"},"headingText":"I. Exploring music preferences","containsRefs":false,"markdown":"\n\n```{r setup, include=TRUE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n<style>\np.comment {\nbackground-color: #DBDBDB;\npadding: 10px;\nborder: 1px solid black;\nmargin-left: 25px;\nborder-radius: 5px;\nfont-style: italic;\n}\n\n</style>\n\n<br>\n<br>\n<div class=\"alert alert-info\">\n  <strong>Welcome!</strong> Hope you have watched the lecture videos and followed the instructions in code-along. Go through the steps described below, _carefully_. It is totally fine to get stuck - <strong>ASK FOR HELP</strong>; reach out to your friends, TAs, or the discussion forum on Canvas.\n  \n&nbsp;\n\nHere is what you have to do,\n<br>\n<br>\n\n1. <strong>Pair</strong> with a neighbor and work \n\n2. <strong>Download</strong> the `Challenge-2.Rmd` and `playlist_data.csv` files from Canvas\n\n3. <strong>Move</strong> the downloaded files to the folder, \"Week-2\"\n\n4. <strong>Set</strong> it as the working directory \n\n5. <strong>Edit</strong> content wherever indicated \n\n6. <strong>Remember</strong> to set `eval=TRUE` after completing the code to generate the output\n\n7. <strong>Ensure</strong> that `echo=TRUE` so that the code is rendered in the final document\n\n8. <strong>Inform</strong> the tutor/instructor upon completion\n\n9. <strong>Submit</strong> the document on Canvas after they approve\n\n10. <strong>Attendance</strong> will be marked only after submission\n\n11. Once again, <strong>do not hesitate</strong> to reach out to the tutors/instructor, if you are stuck\n</div>\n<br>\n\n\n### A. Background\n\nImagine that you have been hired as a data analyst by a radio station to analyze music preferences of their DJs. They have provided you with a dataset, `playlist_data.csv`, containing information about DJs, their preferred music genres, song titles, and ratings. \n\nUsing the data-set you are required to complete some tasks that are listed subsequently. All these tasks are based on the concepts taught in the video lectures. The questions may not be entirely covered in the lectures; To complete them, you are encouraged to use Google and the resources therein.\n<br>\n\n### B.Tasks\n\n#### Task-1\n\nIn the lecture, we used two data-sets, `starwars` and `anscombe's quartet` that were readily available with the packages, `tidyverse` and `Tmisc`, respectively. When we have to use custom-made data-sets or the ones like we downloaded from Canvas, we have to import it using the R commands before using them. All the questions below are related to this task.\n<br>\n<br>\n\n**Question 1.1:** What does the term \"CSV\" in `playlist_data.csv` stand for, and why is it a popular format for storing tabular data?\n\n**Solution:** \"CSV\" stands for \"Comma-Separated Values\". It is simple and widely used file format for storing tubular data such as spreadsheet and databases. In each CSV file, each line represents a row do data within each line, individual values for each column are separated by commas. \n<br>\n<br>\n**Question 1.2:** load the `tidyverse` package to work with `.csv` files in R commands.\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# Load the necessary package to work with CSV files in R.\nlibrary(\"tidyverse\")\n```\n<br>\n\n**Question 1.3:** Import the data-set, `playlist_data.csv`\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# Import the \"playlist_data.csv\" dataset into R \nread.csv(\"playlist_data.csv\")\n```\n<br>\n\n**Question 1.4:** Assign the data-set to a variable, `playlist_data`\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# Assign the variable to a dataset \nplaylist_data <- read.csv(\"playlist_data.csv\")\n```\n\n_From now on, you can use the name of the variable to view the contents of the data-set_\n<br>\n<br>\n\n**Question 1.5:** Get more information about `read_csv()` command and provide a screenshot of the information displayed in the \"Help\" tab of the \"Files\" pane\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# More information about the R command, complete the code\n?read.csv()\n```\n<br>\n```{r, out.height= \"400px\",out.width= \"1600px\",echo=TRUE,eval=TRUE,fig.cap=\"View Help\"}\nknitr::include_graphics(\"wk2p1.png\")\n```\n<br>\n\n**Question 1.6:** What does the `skip` argument in the read_csv() function do?\n\n**Solution:** The skip argument specifies the number of lines to skip before starting to read data from the file. This is useful when you have header information, comments, or other irrelevant lines at the beginning of your file that you want to skip over. Use \"data <- read.table(\"data.txt\", skip = 10)\" in R.\n<br>\n<br>\n\n**Question 1.7:** Display the contents of the data-set\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# Type the name of the variable, to see what it contains\nplaylist_data\n```\n<br>\n\n**Question 1.8:** Assume you have a CSV file named `sales_data.csv` containing information about sales transactions. How would you use the `read_csv()` function to import this file into R command and store it in a variable named `sales_data`?\n\n**Solution:** \n\n```{r,echo=TRUE,eval=FALSE}\n# No output is required for this code\n# Only the list of commands that execute the task mentioned in the question are required\nSales_data <- read_csv(\"sales_data.csv\")\n```\n<br>\n<br>\n\n#### Task-2\n\nAfter learning to import a data-set, let us explore the contents of the data-set through the following questions\n<br>\n<br>\n\n**Question 2.1:** Display the first few rows of the data-set to get an overview of its structure\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# Type the name of the variable we assigned the data-set to\nhead(playlist_data)\n```\n<br>\n\n**Question 2.2:** Display all the columns of the variable stacked one below another\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# Stack columns of playlist_data\nglimpse(playlist_data)\n```\n<br>\n\n**Question 2.3:** How many columns are there in the dataset?\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\nncol(playlist_data)\n```\n<br>\n\n**Question 2.4:** What is the total count of DJs?\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\nplaylist_data$DJ_Name\nlength(playlist_data$DJ_Name)\n```\n<br>\n\n**Question 2.5:** Display all the location of all the DJs\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\nfilter_columns <- c(playlist_data$DJ_Name)\nplaylist_data %>% filter(DJ_Name%in%filter_columns) %>% select(DJ_Name,Location)\n\n```\n<br>\n\n**Question 2.6:** Display the age of the DJs\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\nplaylist_data %>% filter(DJ_Name%in%filter_columns) %>% select(Age)\n```\n<br>\n<br>\n\n#### Task-3\n\nLet us plot the data to get more insights about the DJs.\n<br>\n<br>\n\n**Question 3.1:** Create a plot to visualize the relationship between DJs' ages and their ratings.\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# complete the code to generate the plot\n\nggplot(data=playlist_data) + aes(x=Age,y=Rating)\n\n```\n<br>\n\n**Question 3.2:** Label the x-axis as \"Age\" and the y-axis as \"Rating.\"\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# complete the code to generate the plot\n\nggplot(data=playlist_data) + aes(x=Age,y=Rating) + labs(x=\"Age (Years Old)\",y=\"Rating (No Unit)\")\n```\n<br>\n\n**Question 3.3:** Represent data using points\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# complete the code to generate the plot\n\nggplot(data=playlist_data) + aes(x=Age,y=Rating) + labs(x=\"Age (Years Old)\",y=\"Rating (No Unit)\") + geom_point() \n```\n<br>\n\n**Question 3.4:** Can you change the points represented by dots/small circles to any other shape of your liking?\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# complete the code to generate the plot\nggplot(data=playlist_data) + aes(x=Age,y=Rating) + labs(x=\"Age (Years Old)\",y=\"Rating (No Unit)\") + geom_point(shape=21, fill=\"red\", size=5) \n```\n<br>\n\n**Question 3.5:** Insert a suitable title and briefly provide your insights in the caption\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# complete the code to generate the plot\n\nggplot(data=playlist_data) + aes(x=Age,y=Rating) + labs(x=\"Age (Years Old)\",y=\"Rating (No Unit)\") + geom_point(shape=21, fill=\"red\", size=5)+ labs(x=\"Age (Years Old)\",y=\"Rating (No units)\",title=\"Scatter graph of Age versus Rating\",caption=\"Age doesn't determine talent, whether you are old or young, your song can be popular\")\n```\n<br>\n\n","srcMarkdownNoYaml":"\n\n```{r setup, include=TRUE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n<style>\np.comment {\nbackground-color: #DBDBDB;\npadding: 10px;\nborder: 1px solid black;\nmargin-left: 25px;\nborder-radius: 5px;\nfont-style: italic;\n}\n\n</style>\n\n<br>\n<br>\n<div class=\"alert alert-info\">\n  <strong>Welcome!</strong> Hope you have watched the lecture videos and followed the instructions in code-along. Go through the steps described below, _carefully_. It is totally fine to get stuck - <strong>ASK FOR HELP</strong>; reach out to your friends, TAs, or the discussion forum on Canvas.\n  \n&nbsp;\n\nHere is what you have to do,\n<br>\n<br>\n\n1. <strong>Pair</strong> with a neighbor and work \n\n2. <strong>Download</strong> the `Challenge-2.Rmd` and `playlist_data.csv` files from Canvas\n\n3. <strong>Move</strong> the downloaded files to the folder, \"Week-2\"\n\n4. <strong>Set</strong> it as the working directory \n\n5. <strong>Edit</strong> content wherever indicated \n\n6. <strong>Remember</strong> to set `eval=TRUE` after completing the code to generate the output\n\n7. <strong>Ensure</strong> that `echo=TRUE` so that the code is rendered in the final document\n\n8. <strong>Inform</strong> the tutor/instructor upon completion\n\n9. <strong>Submit</strong> the document on Canvas after they approve\n\n10. <strong>Attendance</strong> will be marked only after submission\n\n11. Once again, <strong>do not hesitate</strong> to reach out to the tutors/instructor, if you are stuck\n</div>\n<br>\n\n# I. Exploring music preferences\n\n### A. Background\n\nImagine that you have been hired as a data analyst by a radio station to analyze music preferences of their DJs. They have provided you with a dataset, `playlist_data.csv`, containing information about DJs, their preferred music genres, song titles, and ratings. \n\nUsing the data-set you are required to complete some tasks that are listed subsequently. All these tasks are based on the concepts taught in the video lectures. The questions may not be entirely covered in the lectures; To complete them, you are encouraged to use Google and the resources therein.\n<br>\n\n### B.Tasks\n\n#### Task-1\n\nIn the lecture, we used two data-sets, `starwars` and `anscombe's quartet` that were readily available with the packages, `tidyverse` and `Tmisc`, respectively. When we have to use custom-made data-sets or the ones like we downloaded from Canvas, we have to import it using the R commands before using them. All the questions below are related to this task.\n<br>\n<br>\n\n**Question 1.1:** What does the term \"CSV\" in `playlist_data.csv` stand for, and why is it a popular format for storing tabular data?\n\n**Solution:** \"CSV\" stands for \"Comma-Separated Values\". It is simple and widely used file format for storing tubular data such as spreadsheet and databases. In each CSV file, each line represents a row do data within each line, individual values for each column are separated by commas. \n<br>\n<br>\n**Question 1.2:** load the `tidyverse` package to work with `.csv` files in R commands.\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# Load the necessary package to work with CSV files in R.\nlibrary(\"tidyverse\")\n```\n<br>\n\n**Question 1.3:** Import the data-set, `playlist_data.csv`\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# Import the \"playlist_data.csv\" dataset into R \nread.csv(\"playlist_data.csv\")\n```\n<br>\n\n**Question 1.4:** Assign the data-set to a variable, `playlist_data`\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# Assign the variable to a dataset \nplaylist_data <- read.csv(\"playlist_data.csv\")\n```\n\n_From now on, you can use the name of the variable to view the contents of the data-set_\n<br>\n<br>\n\n**Question 1.5:** Get more information about `read_csv()` command and provide a screenshot of the information displayed in the \"Help\" tab of the \"Files\" pane\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# More information about the R command, complete the code\n?read.csv()\n```\n<br>\n```{r, out.height= \"400px\",out.width= \"1600px\",echo=TRUE,eval=TRUE,fig.cap=\"View Help\"}\nknitr::include_graphics(\"wk2p1.png\")\n```\n<br>\n\n**Question 1.6:** What does the `skip` argument in the read_csv() function do?\n\n**Solution:** The skip argument specifies the number of lines to skip before starting to read data from the file. This is useful when you have header information, comments, or other irrelevant lines at the beginning of your file that you want to skip over. Use \"data <- read.table(\"data.txt\", skip = 10)\" in R.\n<br>\n<br>\n\n**Question 1.7:** Display the contents of the data-set\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# Type the name of the variable, to see what it contains\nplaylist_data\n```\n<br>\n\n**Question 1.8:** Assume you have a CSV file named `sales_data.csv` containing information about sales transactions. How would you use the `read_csv()` function to import this file into R command and store it in a variable named `sales_data`?\n\n**Solution:** \n\n```{r,echo=TRUE,eval=FALSE}\n# No output is required for this code\n# Only the list of commands that execute the task mentioned in the question are required\nSales_data <- read_csv(\"sales_data.csv\")\n```\n<br>\n<br>\n\n#### Task-2\n\nAfter learning to import a data-set, let us explore the contents of the data-set through the following questions\n<br>\n<br>\n\n**Question 2.1:** Display the first few rows of the data-set to get an overview of its structure\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# Type the name of the variable we assigned the data-set to\nhead(playlist_data)\n```\n<br>\n\n**Question 2.2:** Display all the columns of the variable stacked one below another\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# Stack columns of playlist_data\nglimpse(playlist_data)\n```\n<br>\n\n**Question 2.3:** How many columns are there in the dataset?\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\nncol(playlist_data)\n```\n<br>\n\n**Question 2.4:** What is the total count of DJs?\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\nplaylist_data$DJ_Name\nlength(playlist_data$DJ_Name)\n```\n<br>\n\n**Question 2.5:** Display all the location of all the DJs\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\nfilter_columns <- c(playlist_data$DJ_Name)\nplaylist_data %>% filter(DJ_Name%in%filter_columns) %>% select(DJ_Name,Location)\n\n```\n<br>\n\n**Question 2.6:** Display the age of the DJs\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\nplaylist_data %>% filter(DJ_Name%in%filter_columns) %>% select(Age)\n```\n<br>\n<br>\n\n#### Task-3\n\nLet us plot the data to get more insights about the DJs.\n<br>\n<br>\n\n**Question 3.1:** Create a plot to visualize the relationship between DJs' ages and their ratings.\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# complete the code to generate the plot\n\nggplot(data=playlist_data) + aes(x=Age,y=Rating)\n\n```\n<br>\n\n**Question 3.2:** Label the x-axis as \"Age\" and the y-axis as \"Rating.\"\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# complete the code to generate the plot\n\nggplot(data=playlist_data) + aes(x=Age,y=Rating) + labs(x=\"Age (Years Old)\",y=\"Rating (No Unit)\")\n```\n<br>\n\n**Question 3.3:** Represent data using points\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# complete the code to generate the plot\n\nggplot(data=playlist_data) + aes(x=Age,y=Rating) + labs(x=\"Age (Years Old)\",y=\"Rating (No Unit)\") + geom_point() \n```\n<br>\n\n**Question 3.4:** Can you change the points represented by dots/small circles to any other shape of your liking?\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# complete the code to generate the plot\nggplot(data=playlist_data) + aes(x=Age,y=Rating) + labs(x=\"Age (Years Old)\",y=\"Rating (No Unit)\") + geom_point(shape=21, fill=\"red\", size=5) \n```\n<br>\n\n**Question 3.5:** Insert a suitable title and briefly provide your insights in the caption\n\n**Solution:** \n\n```{r,echo=TRUE,eval=TRUE}\n# complete the code to generate the plot\n\nggplot(data=playlist_data) + aes(x=Age,y=Rating) + labs(x=\"Age (Years Old)\",y=\"Rating (No Unit)\") + geom_point(shape=21, fill=\"red\", size=5)+ labs(x=\"Age (Years Old)\",y=\"Rating (No units)\",title=\"Scatter graph of Age versus Rating\",caption=\"Age doesn't determine talent, whether you are old or young, your song can be popular\")\n```\n<br>\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":"html_document","warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"output-file":"Challenge-2.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.353","editor":"visual","theme":"Morph","title":"Challenge-2","author":"Tang Ching Xian","date":"2023-08-21"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}